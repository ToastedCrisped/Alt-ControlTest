local Use_Displayname = getgenv().Use_Displayname
local alts = getgenv().alts
local host = getgenv().host
local prefix = getgenv().prefix
local numalts = getgenv().numalts

local Players = game:GetService("Players")
local player = game.Players.LocalPlayer
local User = player.Name
local displayName = player.DisplayName
local RunService = game:GetService("RunService")
local TCS = game:GetService("TextChatService")
local VU = game:GetService("VirtualUser")

local PlayerHost = game.Players:FindFirstChild(host)
local altindex
local channel = 1
local Admins = {}

if Use_Displayname then
	for i, alt in ipairs(alts) do
		if displayName == alt then
			index = i
			break
		end
	end
else
	for i, alt in ipairs(alts) do
		if User == alt then
			index = i
			break
		end
	end
end

if not index then
	if player.Name == host then
	else
		warn("No bot or owner corresponding with: " .. table.concat(alts, ", ") .. " or " .. host .. " for this instance.")
		return
	end
end

local function chatMessage(s)
	s = tostring(s)
	if TCS.ChatVersion == Enum.ChatVersion.TextChatService then
		TCS.TextChannels.RBXGeneral:SendAsync(s)
	else
		game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(s, "All")
	end
end

local function SearchPlayers(name)
	if name:lower() == "me" then
		return game.Players:FindFirstChild(host)
	end

	if name:lower() == "random" then
		local players = game.Players:GetPlayers()
		if #players > 0 then
			return players[math.random(1, #players)]
		end
	end

	local bestMatch = nil
	local bestMatchScore = 0

	for _, plr in pairs(game.Players:GetPlayers()) do
		local nameMatch = plr.Name:lower():find(name:lower())
		local displayNameMatch = plr.DisplayName:lower():find(name:lower())

		if nameMatch or displayNameMatch then
			local score = (nameMatch and #plr.Name or 0) + (displayNameMatch and #plr.DisplayName or 0)
			if score > bestMatchScore then
				bestMatchScore = score
				bestMatch = plr
			end
		end
	end

	return bestMatch
end

local function followPlayer(targetPlayer)
	if targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
		while targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") do
			local humanoidRootPart = targetPlayer.Character.HumanoidRootPart
			player.Character.Humanoid:MoveTo(humanoidRootPart.Position)
			wait(0.1)
		end
	else
		warn("Target player or their character is not valid.")
	end
end

local function connectChatListener(playerpower)
	playerpower.Chatted:Connect(function(message)
		if playerpower.Name == host or table.find(Admins, playerpower.Name) then
			if message:sub(1, #prefix) == prefix then
				local command = message:sub(#prefix + 1)
				if command == "status" and table.find(alts, displayName) then
					chatMessage(displayName .. " (Bot " .. index .. ") is active!")
					wait(2)


				elseif command:sub(1, 7) == "follow " and table.find(alts, displayName) then


					local playerName = command:sub(8)
					local targetPlayer = SearchPlayers(playerName)

					if targetPlayer then
						if index == channel then
							chatMessage("Bots are now following " .. targetPlayer.Name .. ".")
						end
						followPlayer(targetPlayer)
						wait(2)
					else
						if index == channel then
							chatMessage("Player not found: " .. playerName)
						end
					end
				end
			end
		end
	end)
end

player.Chatted:Connect(function(message)

end)

if PlayerHost then
	connectChatListener(PlayerHost)
end

game.Players.PlayerAdded:Connect(function(player)
	if table.find(Admins, player.Name) then
		connectChatListener(player)
	end
end)


